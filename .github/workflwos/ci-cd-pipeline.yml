name: CI/CD Pipeline to AWS ECR and ECS Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Amazon ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws ecr get-login-password --region <YOUR-AWS-REGION> | \
          docker login --username AWS --password-stdin <YOUR-AWS-ECR-URL>

      - name: Build and Tag Docker Image
        run: |
          docker build -t simple-blog-server:latest .
          docker tag simple-blog-server:latest <YOUR-AWS-ECR-URL>/simple-blog-server:latest

      - name: Verify Image Tag
        run: |
          docker image inspect <YOUR-AWS-ECR-URL>/simple-blog-server:latest

      - name: Push to AWS ECR
        run: |
          docker push <YOUR-AWS-ECR-URL>/simple-blog-server:latest

      - name: Deploy to AWS ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: '<YOUR-AWS-REGION>' # Replace with your AWS region
        run: |
          aws ecs update-service --cluster simple-blog-server --service simple-blog-server --force-new-deployment

      - name: Clean up
        run: docker rmi <YOUR-AWS-ECR-URL>/simple-blog-server:latest

      - name: Error Handling
        if: failure()
        run: echo "An error occurred, please check the logs for details."
