// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  name      String?
  password  String
  roleId    Int
  role      Role      @relation(fields: [roleId], references: [id])
  posts     Post[]    // Use lazy loading for relations in large-scale apps
  comments  Comment[] // Use lazy loading for relations in large-scale apps
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([roleId], name: "idx_user_roleId") // Indexing for faster queries on foreign keys
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  content    String
  authorId   Int
  author     User      @relation(fields: [authorId], references: [id])
  comments   Comment[] // Use lazy loading for relations
  categoryId Int?
  categories Category? @relation(fields: [categoryId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([authorId, categoryId], name: "idx_post_authorId_categoryId") // Indexing for faster queries
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  authorId  Int
  postId    Int
  author    User     @relation(fields: [authorId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([authorId, postId], name: "idx_comment_authorId_postId") // Indexing for faster queries
}


model Category {
  id       Int    @id @default(autoincrement())
  name     String @unique
  posts    Post[]
}

model Role {
  id        Int    @id @default(autoincrement())
  name      String @unique
  users     User[]
}